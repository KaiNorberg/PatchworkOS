#ifndef _SYS_KBD_H
#define _SYS_KBD_H 1

#include <stdint.h>

#if defined(__cplusplus)
extern "C"
{
#endif

#include "_AUX/nsec_t.h"

typedef enum keycode
{
    KEY_NONE = 0x00,          
    KEY_ERR_OVF = 0x01,       
    KEY_POST_FAIL = 0x02,     
    KEY_ERR_UNDEFINED = 0x03, 
    KEY_A = 0x04,             
    KEY_B = 0x05,             
    KEY_C = 0x06,             
    KEY_D = 0x07,             
    KEY_E = 0x08,             
    KEY_F = 0x09,             
    KEY_G = 0x0A,             
    KEY_H = 0x0B,             
    KEY_I = 0x0C,             
    KEY_J = 0x0D,             
    KEY_K = 0x0E,             
    KEY_L = 0x0F,             
    KEY_M = 0x10,             
    KEY_N = 0x11,             
    KEY_O = 0x12,             
    KEY_P = 0x13,             
    KEY_Q = 0x14,             
    KEY_R = 0x15,             
    KEY_S = 0x16,             
    KEY_T = 0x17,             
    KEY_U = 0x18,             
    KEY_V = 0x19,             
    KEY_W = 0x1A,             
    KEY_X = 0x1B,             
    KEY_Y = 0x1C,             
    KEY_Z = 0x1D,             

    KEY_1 = 0x1E, 
    KEY_2 = 0x1F, 
    KEY_3 = 0x20, 
    KEY_4 = 0x21, 
    KEY_5 = 0x22, 
    KEY_6 = 0x23, 
    KEY_7 = 0x24, 
    KEY_8 = 0x25, 
    KEY_9 = 0x26, 
    KEY_0 = 0x27, 

    KEY_ENTER = 0x28,       
    KEY_ESC = 0x29,         
    KEY_BACKSPACE = 0x2A,   
    KEY_TAB = 0x2B,         
    KEY_SPACE = 0x2C,       
    KEY_MINUS = 0x2D,       
    KEY_EQUAL = 0x2E,       
    KEY_LEFT_BRACE = 0x2F,  
    KEY_RIGHT_BRACE = 0x30, 
    KEY_BACKSLASH = 0x31,   
    KEY_HASHTILDE = 0x32,   
    KEY_SEMICOLON = 0x33,   
    KEY_APOSTROPHE = 0x34,  
    KEY_GRAVE = 0x35,       
    KEY_COMMA = 0x36,       
    KEY_PERIOD = 0x37,      
    KEY_SLASH = 0x38,       
    KEY_CAPS_LOCK = 0x39,   

    KEY_F1 = 0x3A,  
    KEY_F2 = 0x3B,  
    KEY_F3 = 0x3C,  
    KEY_F4 = 0x3D,  
    KEY_F5 = 0x3E,  
    KEY_F6 = 0x3F,  
    KEY_F7 = 0x40,  
    KEY_F8 = 0x41,  
    KEY_F9 = 0x42,  
    KEY_F10 = 0x43, 
    KEY_F11 = 0x44, 
    KEY_F12 = 0x45, 

    KEY_SYSRQ = 0x46,       
    KEY_SCROLL_LOCK = 0x47, 
    KEY_PAUSE = 0x48,       
    KEY_INSERT = 0x49,      
    KEY_HOME = 0x4A,        
    KEY_PAGE_UP = 0x4B,     
    KEY_DELETE = 0x4C,      
    KEY_END = 0x4D,         
    KEY_PAGE_DOWN = 0x4E,   
    KEY_RIGHT = 0x4F,       
    KEY_LEFT = 0x50,        
    KEY_DOWN = 0x51,        
    KEY_UP = 0x52,          

    KEY_NUM_LOCK = 0x53,    
    KEY_KP_SLASH = 0x54,    
    KEY_KP_ASTERISK = 0x55, 
    KEY_KP_MINUS = 0x56,    
    KEY_KP_PLUS = 0x57,     
    KEY_KP_ENTER = 0x58,    
    KEY_KP_1 = 0x59,        
    KEY_KP_2 = 0x5A,        
    KEY_KP_3 = 0x5B,        
    KEY_KP_4 = 0x5C,        
    KEY_KP_5 = 0x5D,        
    KEY_KP_6 = 0x5E,        
    KEY_KP_7 = 0x5F,        
    KEY_KP_8 = 0x60,        
    KEY_KP_9 = 0x61,        
    KEY_KP_0 = 0x62,        
    KEY_KP_PERIOD = 0x63,   

    KEY_102ND = 0x64,    
    KEY_COMPOSE = 0x65,  
    KEY_POWER = 0x66,    
    KEY_KP_EQUAL = 0x67, 

    KEY_F13 = 0x68, 
    KEY_F14 = 0x69, 
    KEY_F15 = 0x6A, 
    KEY_F16 = 0x6B, 
    KEY_F17 = 0x6C, 
    KEY_F18 = 0x6D, 
    KEY_F19 = 0x6E, 
    KEY_F20 = 0x6F, 
    KEY_F21 = 0x70, 
    KEY_F22 = 0x71, 
    KEY_F23 = 0x72, 
    KEY_F24 = 0x73, 

    KEY_OPEN = 0x74,        
    KEY_HELP = 0x75,        
    KEY_PROPS = 0x76,       
    KEY_FRONT = 0x77,       
    KEY_STOP = 0x78,        
    KEY_AGAIN = 0x79,       
    KEY_UNDO = 0x7A,        
    KEY_CUT = 0x7B,         
    KEY_COPY = 0x7C,        
    KEY_PASTE = 0x7D,       
    KEY_FIND = 0x7E,        
    KEY_MUTE = 0x7F,        
    KEY_VOLUME_UP = 0x80,   
    KEY_VOLUME_DOWN = 0x81, 
    KEY_LOCKING_CAPS_LOCK = 0x82, 
    KEY_LOCKING_NUM_LOCK = 0x83, 
    KEY_LOCKING_SCROLL_LOCK = 0x84, 
    KEY_KP_COMMA = 0x85, 
    KEY_KP_EQUAL_SIGN = 0x86, 
    KEY_RO = 0x87,               
    KEY_KATAKANAHIRAGANA = 0x88, 
    KEY_YEN = 0x89,              
    KEY_HENKAN = 0x8A,           
    KEY_MUHENKAN = 0x8B,         
    KEY_KP_JPCOMMA = 0x8C,       
    KEY_INTERNATIONAL7 = 0x8D, 
    KEY_INTERNATIONAL8 = 0x8E, 
    KEY_INTERNATIONAL9 = 0x8F, 
    KEY_HANGEUL = 0x90,        
    KEY_HANJA = 0x91,          
    KEY_KATAKANA = 0x92,       
    KEY_HIRAGANA = 0x93,       
    KEY_ZENKAKUHANKAKU = 0x94, 
    KEY_LANG6 = 0x95, 
    KEY_LANG7 = 0x96, 
    KEY_LANG8 = 0x97, 
    KEY_LANG9 = 0x98, 
    KEY_ALTERNATE_ERASE = 0x99, 
    KEY_SYSREQ = 0x9A,
    KEY_CANCEL = 0x9B, 
    KEY_CLEAR = 0x9C, 
    KEY_PRIOR = 0x9D, 
    KEY_RETURN = 0x9E, 
    KEY_SEPARATOR = 0x9F, 
    KEY_OUT = 0xA0, 
    KEY_OPER = 0xA1, 
    KEY_CLEAR_AGAIN = 0xA2, 
    KEY_CRSEL_PROPS = 0xA3, 
    KEY_EXSEL = 0xA4, 


    KEY_KP_00 = 0xB0, 
    KEY_KP_000 = 0xB1, 
    KEY_THOUSANDS_SEPARATOR = 0xB2, 
    KEY_DECIMAL_SEPARATOR = 0xB3, 
    KEY_CURRENCY_UNIT = 0xB4, 
    KEY_CURRENCY_SUBUNIT = 0xB5, 
    KEY_KP_LEFT_PAREN = 0xB6,  
    KEY_KP_RIGHT_PAREN = 0xB7, 
    KEY_KP_LEFT_BRACE = 0xB8, 
    KEY_KP_RIGHT_BRACE = 0xB9, 
    KEY_KP_TAB = 0xBA, 
    KEY_KP_BACKSPACE = 0xBB, 
    KEY_KP_A = 0xBC, 
    KEY_KP_B = 0xBD, 
    KEY_KP_C = 0xBE, 
    KEY_KP_D = 0xBF, 
    KEY_KP_E = 0xC0, 
    KEY_KP_F = 0xC1, 
    KEY_KP_XOR = 0xC2, 
    KEY_KP_CARET = 0xC3, 
    KEY_KP_PERCENT = 0xC4, 
    KEY_KP_LESS = 0xC5, 
    KEY_KP_GREATER = 0xC6, 
    KEY_KP_AMPERSAND = 0xC7, 
    KEY_KP_DOUBLE_AMPERSAND = 0xC8, 
    KEY_KP_PIPE = 0xC9, 
    KEY_KP_DOUBLE_PIPE = 0xCA, 
    KEY_KP_COLON = 0xCB, 
    KEY_KP_HASH = 0xCC, 
    KEY_KP_SPACE = 0xCD, 
    KEY_KP_AT = 0xCE, 
    KEY_KP_EXCLAMATION = 0xCF, 
    KEY_KP_MEMORY_STORE = 0xD0, 
    KEY_KP_MEMORY_RECALL = 0xD1, 
    KEY_KP_MEMORY_CLEAR = 0xD2, 
    KEY_KP_MEMORY_ADD = 0xD3, 
    KEY_KP_MEMORY_SUBTRACT = 0xD4, 
    KEY_KP_MEMORY_MULTIPLY = 0xD5, 
    KEY_KP_MEMORY_DIVIDE = 0xD6, 
    KEY_KP_PLUS_MINUS = 0xD7, 
    KEY_KP_CLEAR = 0xD8, 
    KEY_KP_CLEAR_ENTRY = 0xD9, 
    KEY_KP_BINARY = 0xDA, 
    KEY_KP_OCTAL = 0xDB, 
    KEY_KP_DECIMAL = 0xDC, 
    KEY_KP_HEXADECIMAL = 0xDD,

    KEY_LEFT_CTRL = 0xE0,   
    KEY_LEFT_SHIFT = 0xE1,  
    KEY_LEFT_ALT = 0xE2,    
    KEY_LEFT_SUPER = 0xE3,  
    KEY_RIGHT_CTRL = 0xE4,  
    KEY_RIGHT_SHIFT = 0xE5, 
    KEY_RIGHT_ALT = 0xE6,   
    KEY_RIGHT_SUPER = 0xE7, 

    KEY_MEDIA_PLAY_PAUSE = 0xE8,
    KEY_MEDIA_STOP_CD = 0xE9,
    KEY_MEDIA_PREVIOUS_SONG = 0xEA,
    KEY_MEDIA_NEXT_SONG = 0xEB,
    KEY_MEDIA_EJECT_CD = 0xEC,
    KEY_MEDIA_VOLUME_UP = 0xED,
    KEY_MEDIA_VOLUME_DOWN = 0xEE,
    KEY_MEDIA_MUTE = 0xEF,
    KEY_MEDIA_WWW = 0xF0,
    KEY_MEDIA_BACK = 0xF1,
    KEY_MEDIA_FORWARD = 0xF2,
    KEY_MEDIA_STOP = 0xF3,
    KEY_MEDIA_FIND = 0xF4,
    KEY_MEDIA_SCROLL_UP = 0xF5,
    KEY_MEDIA_SCROLL_DOWN = 0xF6,
    KEY_MEDIA_EDIT = 0xF7,
    KEY_MEDIA_SLEEP = 0xF8,
    KEY_MEDIA_COFFEE = 0xF9,
    KEY_MEDIA_REFRESH = 0xFA,
    KEY_MEDIA_CALC = 0xFB
} keycode_t;

typedef enum kbd_event_type
{
    KBD_PRESS = 0,
    KBD_RELEASE = 1
} kbd_event_type_t;

typedef enum kbd_mods
{
    KBD_MOD_NONE = 0,
    KBD_MOD_CAPS = 1 << 0,
    KBD_MOD_SHIFT = 1 << 1,
    KBD_MOD_CTRL = 1 << 2,
    KBD_MOD_ALT = 1 << 3,
    KBD_MOD_SUPER = 1 << 4,
} kbd_mods_t;

typedef struct kbd_event
{
    nsec_t time;
    kbd_event_type_t type;
    kbd_mods_t mods;
    keycode_t code;
} kbd_event_t;

char kbd_ascii(keycode_t code, kbd_mods_t mods);

#if defined(__cplusplus)
}
#endif

#endif
