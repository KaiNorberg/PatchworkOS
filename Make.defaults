MKCWD = mkdir -p $(@D)

GC = gcc
AS = nasm
LD = ld
OBJCOPY := objcopy

CFLAGS := \
	-std=gnu11 \
	-Wall \
	-Wextra \
	-Werror \
	-Wno-deprecated-pragma \
	-Wno-unused-function \
	-Wno-unused-variable \
	-Wno-ignored-qualifiers \
	-Wno-unused-but-set-variable \
	-Wno-implicit-fallthrough \
	-Wno-deprecated-non-prototype \
	-Wno-unused-but-set-parameter \
	-Wno-unused-command-line-argument \
	-nostdlib \
	-nostdinc \
	-ffreestanding \
	-fno-builtin \
	-fno-omit-frame-pointer \
	-isystem include \
	-isystem include/libstd \
	-Lbin/libstd \
	-Lbin/libpatchwork \
	-Iinclude \
	-Ilib \
	-I$(SRCDIR) \
	-D__PATCHWORK_OS__

CFLAGS_DISABLE_SIMD := \
	-mno-mmx -mno-3dnow \
	-mno-80387 -mno-sse \
	-mno-sse2 -mno-sse3 \
	-mno-ssse3 -mno-sse4

ASFLAGS := \
	-f elf64 \
	-Iinclude \
	-Iinclude/libstd \
	-I$(SRCDIR)

LDFLAGS := \
	-m elf_x86_64 \
  -nostdlib \
  -Lbin/libstd \
  -Lbin/libpatchwork

ifeq ($(TESTING),1)
	CFLAGS += -DTESTING
endif

ifeq ($(DEBUG),1)
	CFLAGS += -O0 -g3 -ggdb -fno-omit-frame-pointer -fno-inline
	LDFLAGS += -g
else
	CFLAGS += -O3 -DNDEBUG
endif

ifeq ($(NOSTDLIB),1)
	LDSTDLIB :=
else
	LDSTDLIB := \
		-lstd \
		bin/libstd/crti.o \
		bin/libstd/crt0.o \
		bin/libstd/crtn.o
endif

define find_sources
$(shell find $(1) -name "*.c" -o -name "*.s")
endef

SRC = $(call find_sources,$(SRCDIR))

OBJ = $(patsubst src/%, $(BUILDDIR)/%.o, $(SRC))

DEP = $(OBJ:.o=.d)

-include $(DEP)
